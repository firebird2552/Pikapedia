[{"E:\\Pikapedia\\src\\index.js":"1","E:\\Pikapedia\\src\\App.js":"2","E:\\Pikapedia\\src\\reportWebVitals.js":"3","E:\\Pikapedia\\src\\components\\Header.jsx":"4","E:\\Pikapedia\\src\\components\\Content.jsx":"5","E:\\Pikapedia\\src\\components\\AdComponent.jsx":"6","E:\\Pikapedia\\src\\components\\Footer.jsx":"7","E:\\Pikapedia\\src\\components\\details\\PokemonDetails.jsx":"8","E:\\Pikapedia\\src\\components\\details\\moves\\MoveDetails.jsx":"9","E:\\Pikapedia\\src\\components\\details\\RenderMoves.jsx":"10","E:\\Pikapedia\\src\\components\\details\\RenderEvolutions.jsx":"11","E:\\Pikapedia\\src\\components\\legal.jsx":"12","E:\\Pikapedia\\src\\components\\pokemon-list\\PokemonList.jsx":"13","E:\\Pikapedia\\src\\data\\RetrievePokemon.js":"14","E:\\Pikapedia\\src\\components\\pokemon-list\\RenderMonster.jsx":"15","E:\\Pikapedia\\src\\components\\pokemon-list\\PokemonCard.jsx":"16","E:\\Pikapedia\\src\\components\\pokemon-list\\PokemonImage.jsx":"17","E:\\Pikapedia\\src\\components\\pokemon-list\\PokemonList.js":"18","E:\\Pikapedia\\src\\components\\pokemon-list\\RenderMonster.js":"19"},{"size":517,"mtime":1665707150000,"results":"20","hashOfConfig":"21"},{"size":360,"mtime":1665711654000,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1665707150000,"results":"23","hashOfConfig":"21"},{"size":541,"mtime":1665711654000,"results":"24","hashOfConfig":"21"},{"size":1082,"mtime":1665712850000,"results":"25","hashOfConfig":"21"},{"size":943,"mtime":1665711654000,"results":"26","hashOfConfig":"21"},{"size":406,"mtime":1665712894000,"results":"27","hashOfConfig":"21"},{"size":6149,"mtime":1665717616000,"results":"28","hashOfConfig":"21"},{"size":4195,"mtime":1665711654000,"results":"29","hashOfConfig":"21"},{"size":5156,"mtime":1665713936000,"results":"30","hashOfConfig":"21"},{"size":5366,"mtime":1665717300000,"results":"31","hashOfConfig":"21"},{"size":617,"mtime":1665712958000,"results":"32","hashOfConfig":"21"},{"size":4473,"mtime":1665711654000,"results":"33","hashOfConfig":"21"},{"size":3169,"mtime":1665711654000,"results":"34","hashOfConfig":"21"},{"size":858,"mtime":1665711654000,"results":"35","hashOfConfig":"21"},{"size":3915,"mtime":1665711654000,"results":"36","hashOfConfig":"21"},{"size":662,"mtime":1665711654000,"results":"37","hashOfConfig":"21"},{"size":6920,"mtime":1665715938000,"results":"38","hashOfConfig":"21"},{"size":7316,"mtime":1665715940000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ib0xps",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Pikapedia\\src\\index.js",[],["82","83"],"E:\\Pikapedia\\src\\App.js",[],"E:\\Pikapedia\\src\\reportWebVitals.js",[],"E:\\Pikapedia\\src\\components\\Header.jsx",[],"E:\\Pikapedia\\src\\components\\Content.jsx",[],"E:\\Pikapedia\\src\\components\\AdComponent.jsx",[],"E:\\Pikapedia\\src\\components\\Footer.jsx",[],"E:\\Pikapedia\\src\\components\\details\\PokemonDetails.jsx",["84"],"E:\\Pikapedia\\src\\components\\details\\moves\\MoveDetails.jsx",["85","86"],"// React imports\r\nimport React, { useEffect, useState } from 'react'\r\n\r\n//Library imports\r\nimport axios from 'axios'\r\n\r\n//React-Bootstrap imports\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\n// custom imports\r\n\r\n//functional react component\r\nconst MoveDetails = (props) => {\r\n\r\n    console.log(props)\r\n    const [details, setDetails] = useState({})\r\n\r\n    const getDetails = async (url) => {\r\n        await axios.get(url).then(response => {\r\n\r\n            setDetails(response.data)\r\n        }\r\n            , (error => {\r\n                console.log(error)\r\n            }))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const number = props.location.search.slice(8)\r\n        if (number) {\r\n            const url = `https://pokeapi.co/api/v2/move/${number}`\r\n            console.log(url)\r\n            getDetails(url)\r\n        }\r\n\r\n    }, []);\r\n\r\n    const RenderDescriptions = () => {\r\n        let descriptions = []\r\n\r\n        details.flavor_text_entries.map(({ flavor_text, language, version_group }) => {\r\n            if (language.name === \"en\") {\r\n                descriptions.push(\r\n                    <ListGroup.Item key={details.version_group}>\r\n                        <Container>\r\n                            <Row>\r\n                                <Col className=\"col-12 col-md-4\">{version_group.name}</Col>\r\n                                <Col className=\"col-12 col-md-8\">{flavor_text}</Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </ListGroup.Item>\r\n                )\r\n            }\r\n\r\n        })\r\n\r\n        return descriptions\r\n    }\r\n\r\n    if (details.name !== undefined) {\r\n        details.name = details.name !== undefined ? details.name.replace('-', \" \") : undefined\r\n        return (\r\n            <Card>\r\n                <Card.Header>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card.Title className=\"text-center text-uppercase\">\r\n                                    {details.name}\r\n                                </Card.Title>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Card.Header>\r\n                <Card.Header className=\"text-center\">\r\n                    <Row>\r\n                        <Col>\r\n                            Damage Type\r\n                        </Col>\r\n                        <Col>\r\n                            Power\r\n                        </Col>\r\n                        <Col>PP</Col>\r\n                        <Col>Accuracy</Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <Row>\r\n                        <Col>\r\n                            {details.damage_class.name} - {details.type.name}\r\n                        </Col>\r\n                        <Col>\r\n                            {details.power}\r\n                        </Col>\r\n                        <Col>\r\n                            {details.pp}\r\n                        </Col>\r\n                        <Col>\r\n                            {details.accuracy}\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item >\r\n                            <Container>\r\n                                <Row>\r\n                                    <Col className=\"col-12 col-md-4\"><Card.Subtitle>Game</Card.Subtitle></Col>\r\n                                    <Col className=\"col-12 col-md-8\"><Card.Subtitle>Description</Card.Subtitle></Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </ListGroup.Item>\r\n                        {RenderDescriptions()}\r\n                    </ListGroup>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        )\r\n    } else {\r\n        return <Col><Card.Title>Loading...</Card.Title></Col>\r\n    }\r\n}\r\n\r\nexport default MoveDetails","E:\\Pikapedia\\src\\components\\details\\RenderMoves.jsx",["87"],"//react imports\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// bootstrap imports\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport NavLink from \"react-bootstrap/NavLink\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCaretSquareDown } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst RenderMoves = ({ moves }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [versionGroups, setVersionGroups] = useState([]);\r\n\r\n  const getVersions = async () => {\r\n    let Versions = [];\r\n    let versionDetails = [];\r\n    await axios\r\n      .get(\"https://pokeapi.co/api/v2/version-group/\")\r\n      .then((response) => {\r\n        const result = response.data.results;\r\n        Versions = result;\r\n      });\r\n\r\n    for (let i = 0; i < Versions.length; i++) {\r\n      await axios\r\n        .get(`https://pokeapi.co/api/v2/version-group/${i + 1}/`)\r\n        .then((response) => {\r\n          Versions[i] = response.data;\r\n        });\r\n    }\r\n\r\n    versionDetails = Versions;\r\n    setVersionGroups(versionDetails);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getVersions();\r\n    if (versionGroups.length > 0) {\r\n      setLoading(false);\r\n    }\r\n    return () => {};\r\n  }, [versionGroups]);\r\n\r\n  let moveElements = [];\r\n\r\n  if (!loading) {\r\n    moves != null ? (\r\n      moves.map(({ version_group_details, move }) => {\r\n        const moveUrl = move.url.split(\"/\");\r\n        const moveNumber = moveUrl[6];\r\n        let moveDetails = [];\r\n        moveDetails.push(\r\n          <ListGroup.Item key={moveNumber}>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  {<Card.Subtitle className=\"text-center\">Game</Card.Subtitle>}\r\n                </Col>\r\n                <Col>\r\n                  {\r\n                    <Card.Subtitle className=\"text-center\">\r\n                      Method\r\n                    </Card.Subtitle>\r\n                  }\r\n                </Col>\r\n                <Col>\r\n                  {<Card.Subtitle className=\"text-center\">Level</Card.Subtitle>}\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </ListGroup.Item>\r\n        );\r\n        version_group_details.map((item) => {\r\n          const name = item.version_group.name;\r\n\r\n          // check if the version group name matches the name in the\r\n          const version = versionGroups.find((version) =>\r\n            version.name === name ? version : null\r\n          );\r\n          const gameLinks = version.versions.map((game) => {\r\n            /*const gameUrl = game.url.split('/')\r\n                    //const gameNumber = gameUrl[6]*/\r\n\r\n            let items = [];\r\n            items.push(<Col>{game.name}</Col>);\r\n\r\n            return items;\r\n          });\r\n          moveDetails.push(\r\n            <ListGroup.Item>\r\n              <Container fluid>\r\n                <Row>\r\n                  <Col className=\"text-center\">\r\n                    <Container>\r\n                      <Row>{gameLinks}</Row>\r\n                    </Container>\r\n                  </Col>\r\n                  <Col className=\"text-center\">\r\n                    {item.move_learn_method.name}\r\n                  </Col>\r\n                  <Col className=\"text-center\">{item.level_learned_at}</Col>\r\n                </Row>\r\n              </Container>\r\n            </ListGroup.Item>\r\n          );\r\n          return 0;\r\n        });\r\n        let tempArray = move.url.split(\"/\");\r\n        let number = tempArray[6];\r\n        moveElements.push(\r\n          <ListGroup.Item key={moveNumber}>\r\n            <Accordion>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Container>\r\n                    <Row>\r\n                      <Col className=\"col-11 text-center\">\r\n                        <NavLink href={`/move/${move.name}?number=${number}`}>\r\n                          <Card.Title>{move.name}</Card.Title>\r\n                        </NavLink>\r\n                      </Col>\r\n                      <Col className=\"col-1\">\r\n                        <Accordion.Toggle as={Button} eventKey={moveNumber}>\r\n                          <FontAwesomeIcon icon={faCaretSquareDown} />\r\n                        </Accordion.Toggle>{\" \"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey={moveNumber}>\r\n                  <Card.Body>\r\n                    <ListGroup variant=\"flush\">{moveDetails}</ListGroup>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n          </ListGroup.Item>\r\n        );\r\n        return 0;\r\n      })\r\n    ) : (\r\n      <div>Loading...</div>\r\n    );\r\n  } else {\r\n    moveElements.push(<Card.Title>Loading...</Card.Title>);\r\n  }\r\n\r\n  return moveElements;\r\n};\r\n\r\nexport default RenderMoves;\r\n","E:\\Pikapedia\\src\\components\\details\\RenderEvolutions.jsx",["88","89"],"// React imports\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n//Library imports\r\nimport axios from \"axios\";\r\n\r\n//React-Bootstrap imports\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nconst RenderEvolution = ({ evolutionChain }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [evolutionList, setEvolutionList] = useState({});\r\n\r\n  const GetEvolutions = async () => {\r\n    await axios.get(evolutionChain.url).then((response) => {\r\n      evolutionChain = { ...response.data };\r\n    });\r\n    await axios.get(evolutionChain.chain.species.url).then((response) => {\r\n      evolutionChain.chain.species = { ...response.data };\r\n    });\r\n    await axios\r\n      .get(\r\n        `https://pokeapi.co/api/v2/pokemon/${evolutionChain.chain.species.id}`\r\n      )\r\n      .then((response) => {\r\n        evolutionChain.chain.species = { ...response.data };\r\n      });\r\n    for (let i = 0; i < evolutionChain.chain.evolves_to.length; i++) {\r\n      let evolves_to = evolutionChain.chain.evolves_to[i];\r\n      await axios.get(evolves_to.species.url).then((response) => {\r\n        evolves_to.species = { ...response.data };\r\n      });\r\n      await axios\r\n        .get(`https://pokeapi.co/api/v2/pokemon/${evolves_to.species.id}`)\r\n        .then((response) => {\r\n          evolves_to.species = { ...response.data };\r\n        });\r\n      for (\r\n        let secondEvo = 0;\r\n        secondEvo < evolves_to.evolves_to.length;\r\n        secondEvo++\r\n      ) {\r\n        await axios\r\n          .get(evolves_to.evolves_to[secondEvo].species.url)\r\n          .then((response) => {\r\n            evolves_to.evolves_to[secondEvo].species = { ...response.data };\r\n          });\r\n        await axios\r\n          .get(\r\n            `https://pokeapi.co/api/v2/pokemon/${evolves_to.evolves_to[secondEvo].species.id}`\r\n          )\r\n          .then((response) => {\r\n            evolves_to.evolves_to[secondEvo].species = { ...response.data };\r\n          });\r\n      }\r\n\r\n      // Load all version groups then all versions\r\n    }\r\n\r\n    setEvolutionList(Object.assign(evolutionChain.chain, { isUpdated: true }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      GetEvolutions();\r\n    }\r\n    if (evolutionList.isUpdated) {\r\n      setLoading(false);\r\n    }\r\n  }, [evolutionList]);\r\n\r\n  let evolutions = [];\r\n\r\n  if (!loading) {\r\n    let evolutionItems = () => {\r\n      let firstEvo = (\r\n        <Col className=\"col-12 col-md-2\">\r\n          <Card>\r\n            <Card.Header>\r\n              <Card.Subtitle className=\"text-center text-uppercase\">\r\n                {evolutionList.species.name}\r\n              </Card.Subtitle>\r\n            </Card.Header>\r\n            <Card.Img src={evolutionList.species.sprites.front_default} />\r\n            <Card.Body>\r\n              <Card.Text className=\"text-center\">Level</Card.Text>\r\n              <Card.Text className=\"text-center\">0</Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      );\r\n\r\n      let secondEvo = [];\r\n      let thirdEvo = [];\r\n      for (let evo = 0; evo < evolutionList.evolves_to.length; evo++) {\r\n        const evolvesTo = evolutionList.evolves_to[evo];\r\n        secondEvo.push(\r\n          <Col className=\"col-12 col-md-2\">\r\n            <Card>\r\n              <Card.Header>\r\n                <Card.Subtitle className=\"text-center text-uppercase\">\r\n                  {evolvesTo.species.name}\r\n                </Card.Subtitle>\r\n              </Card.Header>\r\n              <Card.Img src={evolvesTo.species.sprites.front_default} />\r\n              <Card.Body>\r\n                <Card.Text className=\"text-center\">Level</Card.Text>\r\n                <Card.Text className=\"text-center\">\r\n                  {evolvesTo.evolution_details[0].min_level}\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        );\r\n        for (let evoTwo = 0; evoTwo < evolvesTo.evolves_to.length; evoTwo++) {\r\n          const secondEvo = evolvesTo.evolves_to[evoTwo];\r\n          thirdEvo.push(\r\n            <Col className=\"col-12 col-md-2\">\r\n              <Card>\r\n                <Card.Header>\r\n                  <Card.Subtitle className=\"text-center text-uppercase\">\r\n                    {secondEvo.species.name}\r\n                  </Card.Subtitle>\r\n                </Card.Header>\r\n                <Card.Img src={secondEvo.species.sprites.front_default} />\r\n                <Card.Body>\r\n                  <Card.Text className=\"text-center\">Level</Card.Text>\r\n                  <Card.Text className=\"text-center\">\r\n                    {secondEvo.evolution_details[0].min_level}\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          );\r\n        }\r\n      }\r\n      let evoList = (\r\n        <Container fluid>\r\n          <Row className=\"justify-content-center\">\r\n            {firstEvo}\r\n            {secondEvo}\r\n            {thirdEvo}\r\n          </Row>\r\n        </Container>\r\n      );\r\n\r\n      return evoList;\r\n    };\r\n\r\n    evolutions.push(evolutionItems());\r\n  } else {\r\n    evolutions.push(\r\n      <Card.Title className=\"text-center\">Loading...</Card.Title>\r\n    );\r\n  }\r\n\r\n  return evolutions;\r\n};\r\n\r\nexport default RenderEvolution;\r\n","E:\\Pikapedia\\src\\components\\legal.jsx",[],"E:\\Pikapedia\\src\\components\\pokemon-list\\PokemonList.jsx",["90","91"],"E:\\Pikapedia\\src\\data\\RetrievePokemon.js",[],"E:\\Pikapedia\\src\\components\\pokemon-list\\RenderMonster.jsx",[],"E:\\Pikapedia\\src\\components\\pokemon-list\\PokemonCard.jsx",[],"E:\\Pikapedia\\src\\components\\pokemon-list\\PokemonImage.jsx",[],"E:\\Pikapedia\\src\\components\\pokemon-list\\PokemonList.js",["92","93","94"],"E:\\Pikapedia\\src\\components\\pokemon-list\\RenderMonster.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":22,"column":9,"nodeType":"101","messageId":"102","endLine":22,"endColumn":15},{"ruleId":"103","severity":1,"message":"104","line":41,"column":8,"nodeType":"105","endLine":41,"endColumn":10,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":46,"column":84,"nodeType":"109","messageId":"110","endLine":46,"endColumn":86},{"ruleId":"111","severity":1,"message":"112","line":36,"column":15,"nodeType":"109","messageId":"113","endLine":38,"endColumn":10},{"ruleId":"99","severity":1,"message":"114","line":12,"column":8,"nodeType":"101","messageId":"102","endLine":12,"endColumn":17},{"ruleId":"103","severity":1,"message":"115","line":74,"column":6,"nodeType":"105","endLine":74,"endColumn":21,"suggestions":"116"},{"ruleId":"103","severity":1,"message":"117","line":74,"column":6,"nodeType":"105","endLine":74,"endColumn":15,"suggestions":"118"},{"ruleId":"103","severity":1,"message":"117","line":83,"column":6,"nodeType":"105","endLine":83,"endColumn":29,"suggestions":"119"},{"ruleId":"103","severity":1,"message":"120","line":142,"column":8,"nodeType":"105","endLine":142,"endColumn":16,"suggestions":"121"},{"ruleId":"103","severity":1,"message":"117","line":149,"column":8,"nodeType":"105","endLine":149,"endColumn":17,"suggestions":"122"},{"ruleId":"103","severity":1,"message":"117","line":158,"column":8,"nodeType":"105","endLine":158,"endColumn":23,"suggestions":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'colors' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.search'. Either include it or remove the dependency array.","ArrayExpression",["126"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'Versions'.","unsafeRefs","'ListGroup' is defined but never used.","React Hook useEffect has missing dependencies: 'GetEvolutions' and 'loading'. Either include them or remove the dependency array.",["127"],"React Hook useEffect has a missing dependency: 'updatedDisplayedPokemon'. Either include it or remove the dependency array.",["128"],["129"],"React Hook useEffect has a missing dependency: 'filterByRegion'. Either include it or remove the dependency array.",["130"],["131"],["132"],"no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"137","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [props.location.search]",{"range":"146","text":"147"},"Update the dependencies array to be: [GetEvolutions, evolutionList, loading]",{"range":"148","text":"149"},"Update the dependencies array to be: [pokemon, updatedDisplayedPokemon]",{"range":"150","text":"151"},"Update the dependencies array to be: [searchKeyword, region, updatedDisplayedPokemon]",{"range":"152","text":"153"},"Update the dependencies array to be: [filterByRegion, region]",{"range":"154","text":"155"},{"range":"156","text":"151"},"Update the dependencies array to be: [searchKeyword, updatedDisplayedPokemon]",{"range":"157","text":"158"},[1012,1014],"[props.location.search]",[2429,2444],"[GetEvolutions, evolutionList, loading]",[2273,2282],"[pokemon, updatedDisplayedPokemon]",[2479,2502],"[searchKeyword, region, updatedDisplayedPokemon]",[3976,3984],"[filterByRegion, region]",[4131,4140],[4354,4369],"[searchKeyword, updatedDisplayedPokemon]"]