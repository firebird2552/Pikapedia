[{"C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\index.js":"1","C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\App.js":"2","C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\Header.js":"3","C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\Content.js":"4","C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\details\\moves\\MoveDetails.js":"5","C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\details\\PokemonDetails.js":"6","C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\pokemon-list\\PokemonList.js":"7","C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\details\\RenderMoves.js":"8","C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\details\\RenderEvolutions.js":"9","C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\pokemon-list\\RenderPokemon.js":"10","C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\api\\GetPokemon.js":"11","C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\pokemon-list\\RenderMonster.js":"12","C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\pokemon-list\\DisplayImages.js":"13"},{"size":218,"mtime":1670112341846,"results":"14","hashOfConfig":"15"},{"size":360,"mtime":1611449691511,"results":"16","hashOfConfig":"15"},{"size":767,"mtime":1612991050601,"results":"17","hashOfConfig":"15"},{"size":781,"mtime":1612990345169,"results":"18","hashOfConfig":"15"},{"size":4361,"mtime":1670106860664,"results":"19","hashOfConfig":"15"},{"size":5246,"mtime":1613251867125,"results":"20","hashOfConfig":"15"},{"size":5827,"mtime":1670108745971,"results":"21","hashOfConfig":"15"},{"size":5532,"mtime":1611688739851,"results":"22","hashOfConfig":"15"},{"size":5484,"mtime":1613251879086,"results":"23","hashOfConfig":"15"},{"size":1988,"mtime":1670111886997,"results":"24","hashOfConfig":"15"},{"size":1552,"mtime":1670110463587,"results":"25","hashOfConfig":"15"},{"size":3901,"mtime":1670111750417,"results":"26","hashOfConfig":"15"},{"size":1385,"mtime":1670112368612,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"127bfp2",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\index.js",[],"C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\App.js",[],["57","58"],"C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\Header.js",[],"C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\Content.js",[],"C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\details\\moves\\MoveDetails.js",["59","60","61"],"C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\details\\PokemonDetails.js",[],"C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\pokemon-list\\PokemonList.js",["62","63","64"],"C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\details\\RenderMoves.js",["65"],"//react imports\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport axios from 'axios'\r\n\r\n\r\n// bootstrap imports\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport NavLink from 'react-bootstrap/NavLink'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCaretSquareDown } from '@fortawesome/free-regular-svg-icons'\r\n\r\nconst RenderMoves = ({ moves }) => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [versionGroups, setVersionGroups] = useState([])\r\n\r\n    const getVersions = async () => {\r\n        let Versions = []\r\n        let versionDetails = []\r\n        await axios.get('https://pokeapi.co/api/v2/version-group/').then(response => {\r\n            const result = response.data.results\r\n            Versions = result\r\n        })\r\n\r\n        for (let i = 0; i < Versions.length; i++) {\r\n            await axios.get(`https://pokeapi.co/api/v2/version-group/${i + 1}/`).then(response => {\r\n                Versions[i] = response.data\r\n            })\r\n        }\r\n\r\n        versionDetails = Versions\r\n        setVersionGroups(versionDetails)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getVersions()\r\n        if (versionGroups.length > 0) {\r\n            setLoading(false)\r\n        }\r\n        return () => {\r\n        }\r\n    }, [versionGroups])\r\n\r\n    let moveElements = []\r\n\r\n\r\n\r\n    if (!loading) {\r\n\r\n        moves.map(({ version_group_details, move }) => {\r\n            const moveUrl = move.url.split('/')\r\n            const moveNumber = moveUrl[6]\r\n            let moveDetails = []\r\n            moveDetails.push(\r\n                <ListGroup.Item key={moveNumber}>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>{<Card.Subtitle className=\"text-center\">Game</Card.Subtitle>}</Col>\r\n                            <Col>{<Card.Subtitle className=\"text-center\">Method</Card.Subtitle>}</Col>\r\n                            <Col>{<Card.Subtitle className=\"text-center\">Level</Card.Subtitle>}</Col>\r\n                        </Row>\r\n                    </Container>\r\n                </ListGroup.Item>)\r\n            version_group_details.map(item => {\r\n                const name = item.version_group.name\r\n\r\n                // check if the version group name matches the name in the \r\n                const version = versionGroups.find(version => version.name === name ? version : null)\r\n                const gameLinks = version.versions.map(game => {\r\n                    /*const gameUrl = game.url.split('/')\r\n                    //const gameNumber = gameUrl[6]*/\r\n\r\n                    let items = []\r\n                    items.push(\r\n                        <Col>\r\n                            {game.name}\r\n                        </Col>\r\n                    )\r\n\r\n                    return items\r\n                })\r\n                moveDetails.push(\r\n                    <ListGroup.Item>\r\n                        <Container fluid>\r\n                            <Row>\r\n                                <Col className=\"text-center\"><Container><Row>{gameLinks}</Row></Container></Col>\r\n                                <Col className=\"text-center\">{item.move_learn_method.name}</Col>\r\n                                <Col className=\"text-center\">{item.level_learned_at}</Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </ListGroup.Item>\r\n                )\r\n                return 0\r\n            })\r\n            let tempArray = move.url.split('/')\r\n            let number = tempArray[6]\r\n            moveElements.push(\r\n                <ListGroup.Item key={moveNumber}>\r\n                    <Accordion>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col className=\"col-11 text-center\">\r\n                                            <NavLink href={`/move/${move.name}?number=${number}`}>\r\n                                                <Card.Title>\r\n                                                    {move.name}\r\n                                                </Card.Title>\r\n                                            </NavLink>\r\n                                        </Col>\r\n                                        <Col className=\"col-1\">\r\n                                            <Accordion.Toggle as={Button} eventKey={moveNumber}><FontAwesomeIcon icon={faCaretSquareDown} /></Accordion.Toggle>                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey={moveNumber}>\r\n                                <Card.Body>\r\n                                    <ListGroup variant=\"flush\">{moveDetails}</ListGroup >\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </ListGroup.Item >)\r\n            return 0\r\n        })\r\n\r\n    } else { moveElements.push(<Card.Title>Loading...</Card.Title>) }\r\n\r\n    return moveElements\r\n}\r\n\r\nexport default RenderMoves","C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\details\\RenderEvolutions.js",["66"],"// React imports\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n//Library imports\r\nimport axios from 'axios'\r\n\r\n//React-Bootstrap imports\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nconst RenderEvolution = ({ evolutionChain }) => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [evolutionList, setEvolutionList] = useState({})\r\n\r\n    const GetEvolutions = async () => {\r\n        await axios.get(evolutionChain.url).then(response => {\r\n            evolutionChain = { ...response.data }\r\n        })\r\n        await axios.get(evolutionChain.chain.species.url).then(response => {\r\n            evolutionChain.chain.species = { ...response.data }\r\n        })\r\n        await axios.get(`https://pokeapi.co/api/v2/pokemon/${evolutionChain.chain.species.id}`)\r\n            .then(response => {\r\n                evolutionChain.chain.species = { ...response.data }\r\n            })\r\n        for (let i = 0; i < evolutionChain.chain.evolves_to.length; i++) {\r\n\r\n            let evolves_to = evolutionChain.chain.evolves_to[i]\r\n            await axios.get(evolves_to.species.url).then(response => {\r\n                evolves_to.species = { ...response.data }\r\n            })\r\n            await axios.get(`https://pokeapi.co/api/v2/pokemon/${evolves_to.species.id}`)\r\n                .then(response => {\r\n                    evolves_to.species = { ...response.data }\r\n                })\r\n            for (let secondEvo = 0; secondEvo < evolves_to.evolves_to.length; secondEvo++) {\r\n\r\n                await axios.get(evolves_to.evolves_to[secondEvo].species.url).then(response => {\r\n                    evolves_to.evolves_to[secondEvo].species = { ...response.data }\r\n                })\r\n                await axios.get(`https://pokeapi.co/api/v2/pokemon/${evolves_to.evolves_to[secondEvo].species.id}`)\r\n                    .then(response => {\r\n                        evolves_to.evolves_to[secondEvo].species = { ...response.data }\r\n                    })\r\n            }\r\n\r\n            // Load all version groups then all versions\r\n        }\r\n\r\n        setEvolutionList(Object.assign(evolutionChain.chain, { isUpdated: true }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (loading) {\r\n            GetEvolutions()\r\n        }\r\n        if (evolutionList.isUpdated) {\r\n            setLoading(false)\r\n        }\r\n    }, [evolutionList]);\r\n\r\n    let evolutions = []\r\n\r\n    if (!loading) {\r\n        let evolutionItems = () => {\r\n            let firstEvo = (\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Card.Subtitle className=\"text-center text-uppercase\">\r\n                            {evolutionList.species.name}\r\n                        </Card.Subtitle>\r\n                    </Card.Header>\r\n                    <Card.Img src={evolutionList.species.sprites.front_default} />\r\n                    <Card.Body>\r\n                        <Card.Text className=\"text-center\">\r\n                            Level\r\n                            </Card.Text>\r\n                        <Card.Text className=\"text-center\">\r\n                            {evolutionList.evolves_to[0].evolution_details[0].min_level}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>)\r\n\r\n            let secondEvo = []\r\n            let thirdEvo = []\r\n            for (let evo = 0; evo < evolutionList.evolves_to.length; evo++) {\r\n\r\n                const evolvesTo = evolutionList.evolves_to[evo]\r\n                console.log(evolvesTo)\r\n                secondEvo.push(\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Subtitle className=\"text-center text-uppercase\">\r\n                                {evolvesTo.species.name}\r\n                            </Card.Subtitle>\r\n                        </Card.Header>\r\n                        <Card.Img src={evolvesTo.species.sprites.front_default} />\r\n                        <Card.Body>\r\n                            <Card.Text className=\"text-center\">\r\n                                Level\r\n                                </Card.Text>\r\n                            <Card.Text className=\"text-center\">\r\n                                {evolvesTo.evolves_to[0].evolution_details[0].min_level}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )\r\n                for (let evoTwo = 0; evoTwo < evolvesTo.evolves_to.length; evoTwo++) {\r\n                    thirdEvo.push(\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Subtitle className=\"text-center text-uppercase\">\r\n                                    {evolvesTo.evolves_to[evoTwo].species.name}\r\n                                </Card.Subtitle>\r\n                            </Card.Header>\r\n                            <Card.Img src={evolvesTo.evolves_to[evoTwo].species.sprites.front_default} />\r\n                            <Card.Body>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )\r\n                }\r\n            }\r\n            let evoList = []\r\n            evoList.push(firstEvo)\r\n            evoList.push(secondEvo)\r\n            evoList.push(thirdEvo)\r\n\r\n\r\n            return evoList\r\n        }\r\n\r\n        evolutions = evolutionItems()\r\n    } else { evolutions = <Card.Title className=\"text-center\">Loading...</Card.Title> }\r\n\r\n    return evolutions\r\n\r\n}\r\n\r\nexport default RenderEvolution","C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\pokemon-list\\RenderPokemon.js",[],"C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\api\\GetPokemon.js",[],"C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\pokemon-list\\RenderMonster.js",["67"],"C:\\Users\\fireb\\Documents\\Programming\\websites\\pikapedia\\src\\components\\pokemon-list\\DisplayImages.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":20,"column":21,"nodeType":"74","messageId":"75","endLine":20,"endColumn":31},{"ruleId":"76","severity":1,"message":"77","line":44,"column":8,"nodeType":"78","endLine":44,"endColumn":10,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":49,"column":84,"nodeType":"82","messageId":"83","endLine":49,"endColumn":86},{"ruleId":"76","severity":1,"message":"84","line":101,"column":8,"nodeType":"78","endLine":101,"endColumn":16,"suggestions":"85"},{"ruleId":"76","severity":1,"message":"86","line":108,"column":8,"nodeType":"78","endLine":108,"endColumn":17,"suggestions":"87"},{"ruleId":"76","severity":1,"message":"86","line":118,"column":8,"nodeType":"78","endLine":118,"endColumn":23,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":33,"column":87,"nodeType":"82","messageId":"91","endLine":35,"endColumn":14},{"ruleId":"76","severity":1,"message":"92","line":59,"column":8,"nodeType":"78","endLine":59,"endColumn":23,"suggestions":"93"},{"ruleId":"76","severity":1,"message":"94","line":35,"column":8,"nodeType":"78","endLine":35,"endColumn":10,"suggestions":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'setDetails' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.search'. Either include it or remove the dependency array.","ArrayExpression",["98"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'filterByRegion'. Either include it or remove the dependency array.",["99"],"React Hook useEffect has a missing dependency: 'updatedDisplayedPokemon'. Either include it or remove the dependency array.",["100"],["101"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'Versions'.","unsafeRefs","React Hook useEffect has missing dependencies: 'GetEvolutions' and 'loading'. Either include them or remove the dependency array.",["102"],"React Hook useEffect has a missing dependency: 'GetDetails'. Either include it or remove the dependency array.",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [props.location.search]",{"range":"116","text":"117"},"Update the dependencies array to be: [filterByRegion, region]",{"range":"118","text":"119"},"Update the dependencies array to be: [pokemon, updatedDisplayedPokemon]",{"range":"120","text":"121"},"Update the dependencies array to be: [searchKeyword, updatedDisplayedPokemon]",{"range":"122","text":"123"},"Update the dependencies array to be: [GetEvolutions, evolutionList, loading]",{"range":"124","text":"125"},"Update the dependencies array to be: [GetDetails]",{"range":"126","text":"127"},[1178,1180],"[props.location.search]",[2697,2705],"[filterByRegion, region]",[2856,2865],"[pokemon, updatedDisplayedPokemon]",[3174,3189],"[searchKeyword, updatedDisplayedPokemon]",[2319,2334],"[GetEvolutions, evolutionList, loading]",[863,865],"[GetDetails]"]